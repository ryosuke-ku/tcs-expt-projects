/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 22 05:33:40 GMT 2019
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.ScoreResult;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScoreResult_ESTest extends ScoreResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult((-24), 127);
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(90, 26);
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(100, 0);
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(120, 0);
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(90, 60);
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(60, 0);
      assertEquals("failure", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(58, 58);
      assertEquals("failure", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(24, 90);
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(1620, (-1191));
      assertEquals("pass", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ScoreResult scoreResult0 = new ScoreResult();
      String string0 = scoreResult0.scoreResult(127, 127);
      assertEquals("pass", string0);
  }
}
