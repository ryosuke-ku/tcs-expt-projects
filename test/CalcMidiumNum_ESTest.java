/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 22 05:29:32 GMT 2019
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.CalcMidiumNum;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CalcMidiumNum_ESTest extends CalcMidiumNum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(542, 1, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(802, 802, (-2196));
      assertEquals(802, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(0, (-1), 739);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(5232, (-250), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(0, 252, 252);
      assertEquals(252, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum((-584), (-1), (-584));
      assertEquals((-584), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CalcMidiumNum calcMidiumNum0 = new CalcMidiumNum();
      int int0 = calcMidiumNum0.calcMidiumNum(0, 1, 1634);
      assertEquals(1, int0);
  }
}
